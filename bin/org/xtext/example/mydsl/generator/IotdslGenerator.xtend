/*
 * generated by Xtext 2.9.0.v201507170721
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.xtext.example.mydsl.iotdsl.Device
import org.xtext.example.mydsl.iotdsl.State

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class IotdslGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for(d : resource.allContents.toIterable.filter(typeof(Device)))
		{
			fsa.generateFile("devices/" + d.name + ".java", d.compile)
			fsa.generateFile("devices/" + d.name + "SP/states/" + d.name + "Int.java", compileInterface(d))
			for(state : d.states)
			{
				fsa.generateFile("devices/" + d.name + "SP/states/" + state.name + ".java", compileState(state, d))
			}
		}
	}
	
	def compile(Device device)
	{
		'''
		package devices;
		import java.util.*;
		import devices.«device.name»SP.states.«device.name»Int;
		
		public class «device.name» «IF device.superType != null» extends 
			«device.superType.name» «ENDIF» 
		{
			private final static String deviceTag = "«device.attributes.tag»";
			private List<«device.name»Int> states;
			public enum Events
			{
				«IF device.events.size() > 1»
					«FOR i: 1..device.events.size() - 1»
						«device.events.get(i-1).name»,
					«ENDFOR»
					«device.events.last().name»
				«ENDIF»
			}
			
			public «device.name»()
			{
				this.setStates(new ArrayList<«device.name»Int>());
			}
			
			public void addState(«device.name»Int s)
			{
				this.getStates().add(s);
			}
			
			public void removeState(«device.name»Int s)
			{
				this.getStates().remove(s);
			}
			
			public List<«device.name»Int> getStates()
			{
				return this.states;	
			}
			
			public void setStates(List<«device.name»Int> states)
			{
				this.states = states;
			}
		}
		
		'''
	}
	
	def compileState(State state, Device device)
	{
		'''
		package devices.«device.name»SP.states;
		
		public class «state.name» implements «device.name»Int
		{
			public void handle()
			{
				// Code goes here
			}
		}
		'''
	}
	
	def compileInterface(Device device)
	{
		'''
		package devices.«device.name»SP.states;
		
		public interface «device.name»Int
		{
			public abstract void handle();
		}
		'''
	}
}
